
use device: cuda
Model(
  (conv1): Conv2d(3, 128, kernel_size=(5, 5), stride=(1, 1))
  (bn1): BatchNorm2d()
  (relu1): ReLU()
  (dropout1): Dropout()
  (maxp1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1))
  (bn2): BatchNorm2d()
  (relu2): ReLU()
  (dropout2): Dropout()
  (maxp2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc): Linear(in_features=3200, out_features=10, bias=True)
  (loss): CrossEntropyLoss()
)
Epoch 1 of 40 took 141.45532250404358s
  learning rate:                 0.01
  training loss:                 2.6970024785399436
  training accuracy:             0.41597498913295566
  validation loss:               1.6511851704120637
  validation accuracy:           0.4402999866008759
  best epoch:                    1
  best validation accuracy:      0.4402999866008759
  test loss:                     1.6496133315563202
  test accuracy:                 0.4450999882817268
Epoch 2 of 40 took 140.6763436794281s
  learning rate:                 0.01
  training loss:                 1.223770979642868
  training accuracy:             0.5700249873846769
  validation loss:               1.4930093717575073
  validation accuracy:           0.5123999887704849
  best epoch:                    2
  best validation accuracy:      0.5123999887704849
  test loss:                     1.4893195879459382
  test accuracy:                 0.5116999885439872
Epoch 3 of 40 took 139.3478102684021s
  learning rate:                 0.01
  training loss:                 1.0715656876564026
  training accuracy:             0.6246749863773584
  validation loss:               1.352220219373703
  validation accuracy:           0.5831999862194062
  best epoch:                    3
  best validation accuracy:      0.5831999862194062
  test loss:                     1.3640190553665161
  test accuracy:                 0.5799999877810478
Epoch 4 of 40 took 113.393141746521s
  learning rate:                 0.01
  training loss:                 0.9617217898368835
  training accuracy:             0.6661749833077192
  validation loss:               1.2726805698871613
  validation accuracy:           0.5970999872684479
  best epoch:                    4
  best validation accuracy:      0.5970999872684479
  test loss:                     1.2756041133403777
  test accuracy:                 0.5917999860644341
Traceback (most recent call last):
  File "main.py", line 164, in <module>
    train_acc, train_loss = train_epoch(mlp_model, X_train, y_train, optimizer)
  File "main.py", line 73, in train_epoch
    loss_.backward()
  File "/dysData/miniconda3/envs/scribblekitti/lib/python3.8/site-packages/torch/_tensor.py", line 307, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/dysData/miniconda3/envs/scribblekitti/lib/python3.8/site-packages/torch/autograd/__init__.py", line 154, in backward
    Variable._execution_engine.run_backward(
KeyboardInterrupt